# Sample YAML file to validate and export an ARM template into a build artifact
# Requires a package.json file located in the target repository
trigger:
- main # Trigger the pipeline on changes to the main branch

pool:
  vmImage: 'ubuntu-latest' # Use the latest Ubuntu image for the build agent

steps:
# Step to install Node.js
- task: UseNode@1
  inputs:
    version: '18.x' # Specify the version of Node.js to install
  displayName: 'Install Node.js'

# Step to install npm packages
- task: Npm@1
  inputs:
    command: 'install' # Run the npm install command
    workingDir: '$(Build.Repository.LocalPath)/<folder-of-the-package.json-file>' # Replace with the folder containing package.json
    verbose: true # Enable verbose logging
  displayName: 'Install npm package'

# Step to validate Data Factory resources
# This step validates all Data Factory resources in the repository, similar to the "Validate All" option in the UI.
# Replace the placeholders with your subscription ID, resource group name, and factory name.
- task: Npm@1
  inputs:
    command: 'custom' # Run a custom npm command
    workingDir: '$(Build.Repository.LocalPath)/<folder-of-the-package.json-file>' # Replace with the folder containing package.json
    customCommand: 'run build validate $(Build.Repository.LocalPath)/<Root-folder-from-Git-configuration-settings-in-ADF> /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/<Your-ResourceGroup-Name>/providers/Microsoft.DataFactory/factories/<Your-Factory-Name>'
  displayName: 'Validate'

# Step to validate and generate the ARM template
# This step validates and generates the ARM template, similar to the "Publish" option in the UI.
# The generated ARM template is not published to the live version of the factory.
- task: Npm@1
  inputs:
    command: 'custom' # Run a custom npm command
    workingDir: '$(Build.Repository.LocalPath)/<folder-of-the-package.json-file>' # Replace with the folder containing package.json
    customCommand: 'run build export $(Build.Repository.LocalPath)/<Root-folder-from-Git-configuration-settings-in-ADF> /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/<Your-ResourceGroup-Name>/providers/Microsoft.DataFactory/factories/<Your-Factory-Name> "ArmTemplate"'
  displayName: 'Validate and Generate ARM template'

# Uncomment the following line to use the preview feature that allows stopping/starting only modified triggers.
# Ensure the package.json contains the build-preview command.
# customCommand: 'run build-preview export $(Build.Repository.LocalPath) /subscriptions/222f1459-6ebd-4896-82ab-652d5f6883cf/resourceGroups/GartnerMQ2021/providers/Microsoft.DataFactory/factories/Dev-GartnerMQ2021-DataFactory "ArmTemplate"'

# Step to publish the generated ARM template as a pipeline artifact
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.Repository.LocalPath)/<folder-of-the-package.json-file>/ArmTemplate' # Replace with the folder containing package.json
    artifact: 'ArmTemplates' # Name of the artifact
    publishLocation: 'pipeline' # Publish location
